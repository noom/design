// styling for the brand page
section {
  h2, h3 {
    clear: both;
  }

  typeSample.headings {
    font-size: $fontH;
  }

  typeSample.task-card {
    font-size: $fontL;
    font-weight: 400;
  }

  typeSample.body-text {
    font-size: $fontM;
    font-weight: 400;
  }

  typeSample.informational {
    font-size: $fontXXS;
    font-weight: 700;
    color: $brand-color;
    text-transform: uppercase;
  }

  typeSample.clickable-list {
    font-size: $fontL;
    font-weight: 500;
    color: $brand-color;
    border-top: 1px solid $grey_light;
    border-bottom: 1px solid $grey_light;
    padding: $spaceM 0;
  }

  typeSample.clickable-text {
    font-size: $fontS;
    font-weight: 700;
    color: $brand-color;
    &:hover {
      cursor: pointer;
    }
  }

  typeSample.button-text {
    display: inline-block;
    font-size: $fontM;
    color: white;
    text-align: center;
    background-color: $brand-color;
    border-radius: $button-border-radius;
    padding: 13.5px 0;
    width: 327px;
    max-width: 100%;
    transition: all $transition-time;

    &:hover {
      background-color: $brand-color-dark;
      cursor: pointer;
      transition: all $transition-time;
    }
  }
}


// create all the colour classes to be applied for the colour swatches
  @for $i from 1 through length($color_names) {
    %#{nth($color_names, $i)} {
      background-color: nth($color_vars, $i);
    }
  }

.color-container {
  position: relative;

  .color-swatch {
    display: inline-block;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    margin: 0 $spaceXH $spaceXH 0;

    &:before, &:after {
      font-size: $fontXXS;
      text-transform: capitalize;
      position: relative;
      top: $spaceXXXL;
    }

    &:before {
      font-weight: 400;
    }

    &:after {
      color: $grey;
      text-transform: uppercase;
      top: $spaceXXL;
    }

    &.primary {
      width: 100px;
      height: 100px;

      &:before, &:after {
        top: $spaceXXXL*2;
      }
    }


    @for $i from 1 through length($color_names) {
      &.#{nth($color_names, $i)} {
        @extend %#{nth($color_names, $i)};

        $current_color: nth($color_names, $i);
        $current_color: to-string($current_color);
        // $current_color: str-replace($current_color, '_', '');
        $current_hex: nth($color_vars, $i);

        &:before {
          content: "#{$current_color}" + " ";
        }

        &:after {
         content: "#{$current_hex}";
        }
      }
    }
  }
}
